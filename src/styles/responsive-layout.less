@import "variables.less"; // Import variables for spacing and colors
@import "media-queries.less"; // Import media queries for breakpoints
/* filepath: c:\Users\clefw\source\repos\HackerSimulator\src\styles\responsive-layout.less */
/**
 * Responsive Layout System
 * A comprehensive layout system for the HackerSimulator project that provides:
 * - Responsive containers that adapt to viewport size
 * - Breakpoint-based layout switching
 * - Column-based grid system
 * - Adaptive spacing system
 */

/* Standard breakpoints for responsive design */
@breakpoint-xs: 480px;
@breakpoint-sm: 768px;
@breakpoint-md: 992px;
@breakpoint-lg: 1200px;
@breakpoint-xl: 1600px;

/* Define breakpoint mixins for convenience */
.breakpoint-up(@size, @rules) when (@size = xs) {
  @media (min-width: @breakpoint-xs) { 
    @rules();
  }
}
.breakpoint-up(@size, @rules) when (@size = sm) {
  @media (min-width: @breakpoint-sm) { 
    @rules();
  }
}
.breakpoint-up(@size, @rules) when (@size = md) {
  @media (min-width: @breakpoint-md) { 
    @rules();
  }
}
.breakpoint-up(@size, @rules) when (@size = lg) {
  @media (min-width: @breakpoint-lg) { 
    @rules();
  }
}
.breakpoint-up(@size, @rules) when (@size = xl) {
  @media (min-width: @breakpoint-xl) { 
    @rules();
  }
}

.breakpoint-down(@size, @rules) when (@size = xs) {
  @media (max-width: (@breakpoint-xs - 1)) { 
    @rules(); 
  }
}
.breakpoint-down(@size, @rules) when (@size = sm) {
  @media (max-width: (@breakpoint-sm - 1)) { 
    @rules(); 
  }
}
.breakpoint-down(@size, @rules) when (@size = md) {
  @media (max-width: (@breakpoint-md - 1)) { 
    @rules(); 
  }
}
.breakpoint-down(@size, @rules) when (@size = lg) {
  @media (max-width: (@breakpoint-lg - 1)) { 
    @rules(); 
  }
}
.breakpoint-down(@size, @rules) when (@size = xl) {
  @media (max-width: (@breakpoint-xl - 1)) { 
    @rules(); 
  }
}

.breakpoint-between(@lower, @upper, @rules) {
  @lower-val: @breakpoint-xs;
  @upper-val: @breakpoint-xl;
  
  & when (@lower = xs) { @lower-val: @breakpoint-xs; }
  & when (@lower = sm) { @lower-val: @breakpoint-sm; }
  & when (@lower = md) { @lower-val: @breakpoint-md; }
  & when (@lower = lg) { @lower-val: @breakpoint-lg; }
  
  & when (@upper = sm) { @upper-val: @breakpoint-sm - 1; }
  & when (@upper = md) { @upper-val: @breakpoint-md - 1; }
  & when (@upper = lg) { @upper-val: @breakpoint-lg - 1; }
  & when (@upper = xl) { @upper-val: @breakpoint-xl - 1; }
  
  @media (min-width: @lower-val) and (max-width: @upper-val) { 
    @rules(); 
  }
}

/* Orientation-specific media queries */
.orientation(@orient, @rules) when (@orient = portrait) {
  @media (orientation: portrait) { 
    @rules(); 
  }
}
.orientation(@orient, @rules) when (@orient = landscape) {
  @media (orientation: landscape) { 
    @rules(); 
  }
}

/* High-DPI (retina) displays */
.high-dpi(@ratio: 1.5, @rules) {
  @media only screen and (-webkit-min-device-pixel-ratio: @ratio),
         only screen and (min-resolution: (@ratio * 96dpi)) {
    @rules();
  }
}

/* Touch device detection */
.touch-device(@rules) {
  @media (hover: none) and (pointer: coarse) { 
    @rules(); 
  }
}

/* Non-touch device detection */
.non-touch-device(@rules) {
  @media (hover: hover) and (pointer: fine) { 
    @rules(); 
  }
}

/* Print media query */
.print-media(@rules) {
  @media print { 
    @rules(); 
  }
}

/* ========== Responsive Container System ========== */

/* 
 * Container class: Provides a responsive, centered container 
 * with appropriate padding at different breakpoints
 */
.container {
  width: 100%;
  padding-right: var(--spacing-medium);
  padding-left: var(--spacing-medium);
  margin-right: auto;
  margin-left: auto;
  
  &.container-fluid {
    max-width: 100%;
  }
  
  /* Container widths at different breakpoints */
  @media (min-width: @breakpoint-sm) {
    max-width: 720px;
    padding-right: var(--spacing-large);
    padding-left: var(--spacing-large);
  }
  
  @media (min-width: @breakpoint-md) {
    max-width: 960px;
  }
  
  @media (min-width: @breakpoint-lg) {
    max-width: 1140px;
  }
  
  @media (min-width: @breakpoint-xl) {
    max-width: 1320px;
  }
}

/* 
 * Container modifiers for different widths
 */
.container-sm {
  max-width: 540px;
}

.container-md {
  max-width: 720px;
}

.container-lg {
  max-width: 960px;
}

.container-xl {
  max-width: 1140px;
}

/*
 * Responsive column-based layout system that adapts to screen size
 */
.responsive-row {
  display: flex;
  flex-wrap: wrap;
  margin-right: calc(var(--spacing-medium) * -1);
  margin-left: calc(var(--spacing-medium) * -1);
  
  /* Column system within the row */
  .col, 
  .col-auto, 
  .col-1, .col-2, .col-3, .col-4, .col-5, .col-6,
  .col-7, .col-8, .col-9, .col-10, .col-11, .col-12,
  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6,
  .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12,
  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6,
  .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12,
  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6,
  .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {
    position: relative;
    width: 100%;
    padding-right: var(--spacing-medium);
    padding-left: var(--spacing-medium);
  }
  
  /* Auto-width column */
  .col {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
  }
  
  .col-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }
  
  /* Fixed width columns - base (mobile first) */
  .col-1 { flex: 0 0 8.333333%; max-width: 8.333333%; }
  .col-2 { flex: 0 0 16.666667%; max-width: 16.666667%; }
  .col-3 { flex: 0 0 25%; max-width: 25%; }
  .col-4 { flex: 0 0 33.333333%; max-width: 33.333333%; }
  .col-5 { flex: 0 0 41.666667%; max-width: 41.666667%; }
  .col-6 { flex: 0 0 50%; max-width: 50%; }
  .col-7 { flex: 0 0 58.333333%; max-width: 58.333333%; }
  .col-8 { flex: 0 0 66.666667%; max-width: 66.666667%; }
  .col-9 { flex: 0 0 75%; max-width: 75%; }
  .col-10 { flex: 0 0 83.333333%; max-width: 83.333333%; }
  .col-11 { flex: 0 0 91.666667%; max-width: 91.666667%; }
  .col-12 { flex: 0 0 100%; max-width: 100%; }
  
  /* SM breakpoint (tablets) */
  @media (min-width: @breakpoint-sm) {
    .col-sm-1 { flex: 0 0 8.333333%; max-width: 8.333333%; }
    .col-sm-2 { flex: 0 0 16.666667%; max-width: 16.666667%; }
    .col-sm-3 { flex: 0 0 25%; max-width: 25%; }
    .col-sm-4 { flex: 0 0 33.333333%; max-width: 33.333333%; }
    .col-sm-5 { flex: 0 0 41.666667%; max-width: 41.666667%; }
    .col-sm-6 { flex: 0 0 50%; max-width: 50%; }
    .col-sm-7 { flex: 0 0 58.333333%; max-width: 58.333333%; }
    .col-sm-8 { flex: 0 0 66.666667%; max-width: 66.666667%; }
    .col-sm-9 { flex: 0 0 75%; max-width: 75%; }
    .col-sm-10 { flex: 0 0 83.333333%; max-width: 83.333333%; }
    .col-sm-11 { flex: 0 0 91.666667%; max-width: 91.666667%; }
    .col-sm-12 { flex: 0 0 100%; max-width: 100%; }
  }
  
  /* MD breakpoint (small laptops) */
  @media (min-width: @breakpoint-md) {
    .col-md-1 { flex: 0 0 8.333333%; max-width: 8.333333%; }
    .col-md-2 { flex: 0 0 16.666667%; max-width: 16.666667%; }
    .col-md-3 { flex: 0 0 25%; max-width: 25%; }
    .col-md-4 { flex: 0 0 33.333333%; max-width: 33.333333%; }
    .col-md-5 { flex: 0 0 41.666667%; max-width: 41.666667%; }
    .col-md-6 { flex: 0 0 50%; max-width: 50%; }
    .col-md-7 { flex: 0 0 58.333333%; max-width: 58.333333%; }
    .col-md-8 { flex: 0 0 66.666667%; max-width: 66.666667%; }
    .col-md-9 { flex: 0 0 75%; max-width: 75%; }
    .col-md-10 { flex: 0 0 83.333333%; max-width: 83.333333%; }
    .col-md-11 { flex: 0 0 91.666667%; max-width: 91.666667%; }
    .col-md-12 { flex: 0 0 100%; max-width: 100%; }
  }
  
  /* LG breakpoint (laptops and desktops) */
  @media (min-width: @breakpoint-lg) {
    .col-lg-1 { flex: 0 0 8.333333%; max-width: 8.333333%; }
    .col-lg-2 { flex: 0 0 16.666667%; max-width: 16.666667%; }
    .col-lg-3 { flex: 0 0 25%; max-width: 25%; }
    .col-lg-4 { flex: 0 0 33.333333%; max-width: 33.333333%; }
    .col-lg-5 { flex: 0 0 41.666667%; max-width: 41.666667%; }
    .col-lg-6 { flex: 0 0 50%; max-width: 50%; }
    .col-lg-7 { flex: 0 0 58.333333%; max-width: 58.333333%; }
    .col-lg-8 { flex: 0 0 66.666667%; max-width: 66.666667%; }
    .col-lg-9 { flex: 0 0 75%; max-width: 75%; }
    .col-lg-10 { flex: 0 0 83.333333%; max-width: 83.333333%; }
    .col-lg-11 { flex: 0 0 91.666667%; max-width: 91.666667%; }
    .col-lg-12 { flex: 0 0 100%; max-width: 100%; }
  }
}

/* 
 * Adaptive spacing system that scales with screen size
 */
.generate-responsive-spacing(@spacer, @name) {
  /* Margins */
  .m-@{name} { margin: @spacer !important; }
  .mt-@{name} { margin-top: @spacer !important; }
  .mr-@{name} { margin-right: @spacer !important; }
  .mb-@{name} { margin-bottom: @spacer !important; }
  .ml-@{name} { margin-left: @spacer !important; }
  .mx-@{name} {
    margin-right: @spacer !important;
    margin-left: @spacer !important;
  }
  .my-@{name} {
    margin-top: @spacer !important;
    margin-bottom: @spacer !important;
  }
  
  /* Padding */
  .p-@{name} { padding: @spacer !important; }
  .pt-@{name} { padding-top: @spacer !important; }
  .pr-@{name} { padding-right: @spacer !important; }
  .pb-@{name} { padding-bottom: @spacer !important; }
  .pl-@{name} { padding-left: @spacer !important; }
  .px-@{name} {
    padding-right: @spacer !important;
    padding-left: @spacer !important;
  }
  .py-@{name} {
    padding-top: @spacer !important;
    padding-bottom: @spacer !important;
  }
}

/* Base spacing utilities */
.generate-responsive-spacing(0, 0);
.generate-responsive-spacing(var(--spacing-small), 1);
.generate-responsive-spacing(var(--spacing-medium), 2);
.generate-responsive-spacing(var(--spacing-large), 3);
.generate-responsive-spacing(var(--spacing-xlarge), 4);

/* Responsive spacing utilities - SM */
@media (min-width: @breakpoint-sm) {
  .generate-responsive-spacing(0, 'sm-0');
  .generate-responsive-spacing(var(--spacing-small), 'sm-1');
  .generate-responsive-spacing(var(--spacing-medium), 'sm-2');
  .generate-responsive-spacing(var(--spacing-large), 'sm-3');
  .generate-responsive-spacing(var(--spacing-xlarge), 'sm-4');
}

/* Responsive spacing utilities - MD */
@media (min-width: @breakpoint-md) {
  .generate-responsive-spacing(0, 'md-0');
  .generate-responsive-spacing(var(--spacing-small), 'md-1');
  .generate-responsive-spacing(var(--spacing-medium), 'md-2');
  .generate-responsive-spacing(var(--spacing-large), 'md-3');
  .generate-responsive-spacing(var(--spacing-xlarge), 'md-4');
}

/* Responsive spacing utilities - LG */
@media (min-width: @breakpoint-lg) {
  .generate-responsive-spacing(0, 'lg-0');
  .generate-responsive-spacing(var(--spacing-small), 'lg-1');
  .generate-responsive-spacing(var(--spacing-medium), 'lg-2');
  .generate-responsive-spacing(var(--spacing-large), 'lg-3');
  .generate-responsive-spacing(var(--spacing-xlarge), 'lg-4');
}

/*
 * Responsive display utilities for toggling visibility at different breakpoints
 */
.d-none { display: none !important; }
.d-inline { display: inline !important; }
.d-inline-block { display: inline-block !important; }
.d-block { display: block !important; }
.d-flex { display: flex !important; }
.d-inline-flex { display: inline-flex !important; }
.d-grid { display: grid !important; }

/* SM breakpoint (tablets) */
@media (min-width: @breakpoint-sm) {
  .d-sm-none { display: none !important; }
  .d-sm-inline { display: inline !important; }
  .d-sm-inline-block { display: inline-block !important; }
  .d-sm-block { display: block !important; }
  .d-sm-flex { display: flex !important; }
  .d-sm-inline-flex { display: inline-flex !important; }
  .d-sm-grid { display: grid !important; }
}

/* MD breakpoint (small laptops) */
@media (min-width: @breakpoint-md) {
  .d-md-none { display: none !important; }
  .d-md-inline { display: inline !important; }
  .d-md-inline-block { display: inline-block !important; }
  .d-md-block { display: block !important; }
  .d-md-flex { display: flex !important; }
  .d-md-inline-flex { display: inline-flex !important; }
  .d-md-grid { display: grid !important; }
}

/* LG breakpoint (laptops and desktops) */
@media (min-width: @breakpoint-lg) {
  .d-lg-none { display: none !important; }
  .d-lg-inline { display: inline !important; }
  .d-lg-inline-block { display: inline-block !important; }
  .d-lg-block { display: block !important; }
  .d-lg-flex { display: flex !important; }
  .d-lg-inline-flex { display: inline-flex !important; }
  .d-lg-grid { display: grid !important; }
}

/* Orientation-specific display */
@media (orientation: portrait) {
  .d-portrait-none { display: none !important; }
  .d-portrait-block { display: block !important; }
  .d-portrait-flex { display: flex !important; }
}

@media (orientation: landscape) {
  .d-landscape-none { display: none !important; }
  .d-landscape-block { display: block !important; }
  .d-landscape-flex { display: flex !important; }
}

/*
 * Responsive typography that scales with viewport
 */
html {
  font-size: 16px; /* Base font size */
  
  @media (max-width: @breakpoint-sm) {
    font-size: 14px; /* Smaller base for mobile */
  }
  
  @media (min-width: @breakpoint-lg) {
    font-size: 18px; /* Larger base for desktop */
  }
}

.font-size-responsive {
  font-size: calc(16px + (24 - 16) * ((100vw - 320px) / (1200 - 320)));
}

.heading-responsive {
  font-size: calc(1.5rem + 1.5vw);
}

/* Viewport height/width based sizing */
.vh-100 { height: 100vh; }
.vw-100 { width: 100vw; }
.vh-75 { height: 75vh; }
.vh-50 { height: 50vh; }
.vh-25 { height: 25vh; }

/* Min/max heights based on viewport */
.min-vh-100 { min-height: 100vh; }
.min-vw-100 { min-width: 100vw; }
.max-vh-100 { max-height: 100vh; }
.max-vw-100 { max-width: 100vw; }

/* Breakpoint-aware container that automatically switches layouts */
.responsive-container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  
  /* Mobile (stacked) layout by default */
  display: flex;
  flex-direction: column;
  
  /* Switch to side-by-side at tablet breakpoint */
  @media (min-width: @breakpoint-sm) {
    flex-direction: row;
    flex-wrap: wrap;
  }
  
  /* Two column layout at medium breakpoint */
  @media (min-width: @breakpoint-md) {
    .responsive-item {
      flex: 0 0 50%;
      max-width: 50%;
    }
  }
  
  /* Three column layout at large breakpoint */
  @media (min-width: @breakpoint-lg) {
    .responsive-item {
      flex: 0 0 33.333333%;
      max-width: 33.333333%;
    }
  }
}

/* Auto grid that adjusts the number of columns based on available space */
.auto-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  grid-gap: var(--spacing-medium);
}

/* Automatic grid resizing for orientation changes */
@media (orientation: portrait) {
  .orientation-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (orientation: landscape) {
  .orientation-grid {
    grid-template-columns: repeat(4, 1fr);
  }
}
